{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/modifiers/state-modifiers.ts","../src/modifiers/style-modifiers.ts","../src/modifiers/width-modifiers.ts","../src/components/Button.tsx","../src/components/Input.tsx","../src/components/IconBar.tsx","../src/services/DrawerMenuService.ts","../src/components/HeaderBar.tsx","../src/components/Panel.tsx","../src/components/Alert.tsx","../src/components/Badge.tsx","../src/services/ModalService.ts","../src/components/ModalHandler.tsx","../src/components/DrawerMenuHandler.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export enum StateModifier {\n    None,\n    Loading,\n    Disabled\n}","export enum StyleModifier {\n    Default,\n    Primary,\n    Success,\n    Error\n}\n\nexport function getStyle(style: StyleModifier) {\n    switch(style) {\n        case StyleModifier.Default:\n            return \"gray-200\";\n        break;\n\n        case StyleModifier.Primary:\n            return \"black\";\n        break;\n\n        case StyleModifier.Success:\n            return \"green-400\";\n        break;\n\n        case StyleModifier.Error:\n            return \"red-500\";\n        break;\n    }\n}\n\nexport function getButtonFontColor(style: StyleModifier) {\n    switch(style) {\n        case StyleModifier.Default:\n            return \"gray-600\";\n\n        case StyleModifier.Error:\n            return \"red-100\";\n        \n        case StyleModifier.Primary:\n            return \"white\";\n        \n        case StyleModifier.Success:\n            return \"green-800\";\n    }\n}\n\nexport function getAlertFontColor(style : StyleModifier) {\n    switch(style) {\n        case StyleModifier.Default:\n            return \"gray-600\";\n\n        case StyleModifier.Error:\n            return \"red-600\";\n        \n        case StyleModifier.Primary:\n            return \"black\";\n        \n        case StyleModifier.Success:\n            return \"green-800\";\n    }\n}\n\nexport function getAlertStyle(style: StyleModifier) {\n    switch(style) {\n        case StyleModifier.Default:\n            return \"gray-100\";\n        break;\n\n        case StyleModifier.Primary:\n            return \"gray-200\";\n        break;\n\n        case StyleModifier.Success:\n            return \"green-50\";\n        break;\n\n        case StyleModifier.Error:\n            return \"red-50\";\n        break;\n    }\n}\n\nexport function getHoverStyle(style: StyleModifier) {\n    switch(style) {\n        case StyleModifier.Default:\n            return \"gray-300\";\n        break;\n\n        case StyleModifier.Primary:\n            return \"black\";\n        break;\n\n        case StyleModifier.Success:\n            return \"green-500\";\n        break;\n\n        case StyleModifier.Error:\n            return \"red-600\";\n        break;\n    }\n}","export enum WidthModifier {\n    Normal,\n    Fill\n}","import React from 'react';\nimport { StateModifier } from '../modifiers/state-modifiers';\nimport {  getButtonFontColor, getHoverStyle, getStyle, StyleModifier } from '../modifiers/style-modifiers';\nimport { WidthModifier } from '../modifiers/width-modifiers';\n\ninterface ButtonProps {\n  style: StyleModifier,\n  width?: WidthModifier\n  state?: StateModifier\n  type?: ButtonType\n  children?: React.ReactNode // Add this line,\n  onClick? : () => void;\n}\n\nexport enum ButtonType {\n  Default,\n  Icon\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, style, width, state, type, onClick }) => {\n\n  const styleClass = getStyle(style);\n  var hoverClass = getHoverStyle(style);\n  const fontClass = getButtonFontColor(style);\n\n  const widthStyle = width === WidthModifier.Fill ? \"w-full\" : \"\";\n\n  const isDisabled = state === StateModifier.Disabled || state === StateModifier.Loading;\n\n  const isLoading = state === StateModifier.Loading;\n\n  const sizeClass = type === ButtonType.Icon ? \"w-12 h-12\" : \"px-6 h-12\";\n\n  if(isDisabled) {\n    hoverClass = \"\";\n  }\n\n  return (\n    <button onClick={() => {\n      if(!isDisabled) {\n        if(onClick != null) {\n          onClick();\n        }\n      }\n    }} disabled={isDisabled} className={`${isDisabled ? \"opacity-60 cursor-not-allowed\" : \"\"} text-${fontClass} ${sizeClass} rounded font-bold bg-${styleClass} hover:bg-${hoverClass} ${widthStyle}`}>\n      {isLoading ? \n        <i className=\"bx bxs-cog animate-spin\"></i> : children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { WidthModifier } from \"../modifiers/width-modifiers\";\n\n// Define a type for valid HTML input types\nexport type InputType = 'text' | 'password' | 'email' | 'number' | 'checkbox' | 'radio' | 'submit' | 'button' | 'date' | 'range' | 'tel' | 'url' | 'search';\n\ninterface InputProps {\n    placeholder?: string;\n    type?: InputType;\n    width?: WidthModifier;\n    label?: string;\n    icon?: string;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void; // Added onChange\n}\n\nconst Input: React.FC<InputProps> = ({ placeholder, type = 'text', width, label, icon, onChange }) => {\n    const widthClass = width === WidthModifier.Fill ? \"w-full\" : \"\";\n\n    return (\n        <div className=\"flex flex-col\">\n            {label && <label className=\"mt-3 mb-2 ml-1 text-sm font-medium\">{label}</label>}\n            <div className=\"relative\">\n                <input \n                    type={type} \n                    placeholder={placeholder} \n                    className={`border-2 px-3 py-2 rounded ${widthClass} ${icon ? \"pl-10\" : \"\"}`} \n                    onChange={onChange} // Added onChange handler\n                />\n                {icon && (\n                    <i className={`bx ${icon} absolute top-1/2 left-3 transform -translate-y-1/2`} />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\n\ninterface IconBarProps {\n    buttons: IconButton[];\n}\n\ninterface IconButton {\n    icon: string;\n    onSelected?: () => void; \n}\n\ninterface IconBarState {\n    selected: IconButton;\n}\n\nconst IconBar : React.FC<IconBarProps> = ({ buttons }) => {\n\n    const [state, setState] = useState<IconBarState>({\n        selected: buttons[0]\n    });\n\n    return (\n        <div className=\"w-full bg-gray-300 h-14\">\n            <div className=\"mx-auto container flex flex-row justify-center content-center items-center\">\n                <div className=\"flex flex-row justify-center content-center items-center\">\n                    {\n                        buttons.map((x) => {\n\n                            var isSelected = state.selected == x;\n\n                            var backgroundClass = isSelected ? \"bg-gray-400\" : \"\";\n\n                            return (\n                                <div className={`h-12 w-14 my-1 mx-1 ${backgroundClass} cursor-pointer hover:bg-gray-400 hover:text-gray-900 pointer rounded flex flex-col justify-center content-center items-center`} onClick={() => {\n                                    setState({\n                                        selected: x\n                                    });\n\n                                    if(x.onSelected) {\n                                        x.onSelected();\n                                    }\n                                }}>\n                                    <i className={`${isSelected ? \"text-gray-900\" : \"text-gray-600\"} font-bold text-lg bx ${x.icon}`}></i>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default IconBar;","import React from 'react';\n\nexport interface DrawerMenuItem {\n    text: string;\n    onClicked: () => void;\n}\n\nexport interface DrawerMenu {\n    title: string;\n    items: DrawerMenuItem[];\n    onClosed?: () => void;\n}\n\nclass DrawerMenuService {\n    private drawerMenu: DrawerMenu | null = null;\n    private observers: ((drawerMenu: DrawerMenu | null) => void)[] = [];\n\n    private static instance: DrawerMenuService;\n\n    private constructor() {}\n\n    // Singleton pattern: Ensure only one instance of DrawerMenuService\n    public static getInstance(): DrawerMenuService {\n        if (!DrawerMenuService.instance) {\n            DrawerMenuService.instance = new DrawerMenuService();\n        }\n        return DrawerMenuService.instance;\n    }\n\n    // Subscribe to drawer menu changes\n    public subscribe(observer: (drawerMenu: DrawerMenu | null) => void): void {\n        this.observers.push(observer);\n        observer(this.getCurrentDrawerMenu());\n    }\n\n    // Unsubscribe from drawer menu changes\n    public unsubscribe(observer: (drawerMenu: DrawerMenu | null) => void): void {\n        this.observers = this.observers.filter(obs => obs !== observer);\n    }\n\n    // Notify all observers of the current drawer menu\n    private notify(): void {\n        this.observers.forEach(observer => observer(this.getCurrentDrawerMenu()));\n    }\n\n    // Set a new drawer menu (only one can be open at a time)\n    public setDrawerMenu(drawerMenu: DrawerMenu): void {\n        this.drawerMenu = drawerMenu;\n        this.notify();\n    }\n\n    // Close the current drawer menu and notify observers\n    public closeCurrent(closeItem? : DrawerMenuItem): void {\n\n        if (this.drawerMenu && this.drawerMenu.onClosed) {\n            this.drawerMenu.onClosed();\n        }\n\n        if(this.drawerMenu && closeItem) {\n            closeItem.onClicked();\n        }\n\n        this.drawerMenu = null;\n\n        this.notify();\n    }\n\n    // Get the current drawer menu\n    public getCurrentDrawerMenu(): DrawerMenu | null {\n        return this.drawerMenu;\n    }\n}\n\n// Export the singleton instance of DrawerMenuService\nexport const drawerMenuService = DrawerMenuService.getInstance();\n","import React from \"react\";\nimport { drawerMenuService } from \"../services/DrawerMenuService\";\n\ninterface HeaderBarProps {\n    title?: string;\n    items: HeaderBarItem[];\n}\n\ninterface HeaderBarItem {\n    text: string;\n    onClick: () => void;\n}\n\nconst HeaderBar: React.FC<HeaderBarProps> = ({ title, items  }) => {\n    return (\n        <div className=\"h-12 md:h-20 w-full bg-gray-200\">\n            {/* Mobile Header (Visible below md) */}\n            <div className=\"md:hidden h-12 mx-auto container text-slate-600 font-bold flex flex-row justify-center items-center\">\n                <div className=\"w-10 h-10 bg-gray-300 rounded ml-2 opacity-0\"></div>\n\n                <div className=\"grow text-center\">\n                    {title}\n                </div>\n\n                <div className=\"w-10 h-10 bg-gray-300 rounded mr-2 flex justify-center items-center\" onClick={() => {\n                    drawerMenuService.setDrawerMenu({\n                        title: \"\",\n                        items: items.map((x) => ({\n                            text: x.text,\n                            onClicked: () => {\n\n                            }\n                        }))\n                    });\n                }}>\n                    <i className=\"text-gray-400 font-bold text-lg bx bx-menu\"></i>\n                </div>\n            </div>\n\n            {/* Desktop Header (Visible above md) */}\n            <div className=\"hidden md:flex h-20 mx-auto container text-slate-600 items-center\">\n                <div className=\"text-xl font-bold text-left px-4 text-slate-700\">\n                    {title}\n                </div>\n\n                <div className=\"px-4 flex-grow flex justify-end\">\n                    {items?.map((x) => (\n                        <div key={x.text} className=\"px-2 hover:text-slate-800 cursor-pointer select-none\" onClick={() => x.onClick() }>\n                            {x.text}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderBar;\n","import React from \"react\";\n\ninterface PanelProps {\n    title: string;\n    children?: React.ReactNode\n}\n\nconst Panel : React.FC<PanelProps> = ({ title, children}) => {\n    return (\n        <div className=\"rounded shadow bg-white mb-4\">\n            <div className=\"px-8 pb-3 pt-6 font-bold text-2xl text-slate-900\">\n                {title}\n            </div>\n            <div className=\"px-8 pb-6\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Panel;","import React from \"react\";\nimport { getAlertFontColor, getAlertStyle, getStyle, StyleModifier } from \"../modifiers/style-modifiers\";\n\ninterface AlertProps {\n    title: string;\n    message: string;\n    style: StyleModifier;\n}\n\nconst Alert : React.FC<AlertProps> = ( {title, message, style }) => {\n\n    const borderColor = getStyle(style);\n    const fontColor = getAlertFontColor(style);\n    const bgColor = getAlertStyle(style);\n\n    return (\n        <div className={`bg-${bgColor} rounded border-2 border-${borderColor} text-${fontColor} px-6 py-4`}>\n            <div className=\"font-semibold text-lg\">\n                {title}\n            </div>\n\n            <div className=\"text-base mt-2\">\n                {message}\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import React from \"react\";\nimport { getAlertFontColor, getButtonFontColor, getStyle, StyleModifier } from \"../modifiers/style-modifiers\";\n\ninterface BadgeProps {\n    text: string;\n    style: StyleModifier;\n}\n\nconst Badge : React.FC<BadgeProps> = ({ text, style }) => {\n\n    var fontColor = getButtonFontColor(style);\n    var bgColor = getStyle(style);\n\n    return (\n        <div className={`inline-block text-sm px-2 py-1 rounded-lg text-${fontColor} bg-${bgColor}`}>\n            {text}\n        </div>\n    )\n}\n\nexport default Badge;","import React from 'react';\nimport { StyleModifier } from '../modifiers/style-modifiers';\n\nexport interface ModalButton {\n  text: string;\n  onClick: () => void;\n  style: StyleModifier;\n}\n\nexport interface Modal {\n  title: string;\n  children: React.ReactNode;\n  onClosed: () => void;\n  buttons: ModalButton[];\n}\n\nclass ModalService {\n    private modals: Modal[] = [];\n    private observers: ((modal: Modal | null) => void)[] = [];\n  \n    private static instance: ModalService;\n  \n    private constructor() {}\n  \n    // Singleton pattern: Ensure only one instance of ModalService\n    public static getInstance(): ModalService {\n      if (!ModalService.instance) {\n        ModalService.instance = new ModalService();\n      }\n      return ModalService.instance;\n    }\n  \n    // Subscribe to modal changes\n    public subscribe(observer: (modal: Modal | null) => void): void {\n      this.observers.push(observer);\n      observer(this.getCurrentModal());\n    }\n  \n    // Unsubscribe from modal changes\n    public unsubscribe(observer: (modal: Modal | null) => void): void {\n      this.observers = this.observers.filter(obs => obs !== observer);\n    }\n  \n    // Notify all observers of the current modal\n    private notify(): void {\n      const currentModal = this.getCurrentModal();\n      this.observers.forEach(observer => observer(currentModal));\n    }\n  \n    // Push a new modal onto the stack\n    public setModal(modal: Modal): void {\n      this.modals.push(modal);\n      this.notify();\n    }\n  \n    // Pop the current modal off the stack and notify observers\n    public closeCurrent(clickedItem?: ModalButton): void {\n      const currentModal = this.modals.pop();\n\n      if(currentModal && clickedItem) {\n        clickedItem.onClick();\n      }\n\n      if (currentModal && currentModal.onClosed) {\n        currentModal.onClosed();\n      }\n\n      this.notify();\n    }\n  \n    // Get the current modal\n    public getCurrentModal(): Modal | null {\n      return this.modals.length > 0 ? this.modals[this.modals.length - 1] : null;\n    }\n  }\n  \n  // Export the singleton instance of ModalService\n  export const modalService = ModalService.getInstance();\n  ","import React, { useEffect, useState } from 'react';\nimport { modalService, Modal } from '../services/ModalService';\nimport Button from './Button';\n\nconst ModalHandler: React.FC = () => {\n  const [currentModal, setCurrentModal] = useState<Modal | null>(null);\n\n  useEffect(() => {\n    const handleModalChange = (modal: Modal | null) => {\n      setCurrentModal(modal);\n    };\n\n    modalService.subscribe(handleModalChange);\n\n    return () => {\n      modalService.unsubscribe(handleModalChange);\n    };\n  }, []);\n\n  if (!currentModal) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\"\n      onClick={() => {\n        modalService.closeCurrent();\n      }}\n    >\n      <div\n        className=\"bg-white rounded-lg shadow-lg max-w-lg w-full p-6 m-4\"\n        onClick={(e) => {\n          e.stopPropagation(); // Prevent click event from closing the modal\n        }}\n      >\n        <div className=\"mb-4\">\n          <h2 className=\"text-2xl font-semibold\">{currentModal.title}</h2>\n        </div>\n        <div className=\"mb-4\">\n          {currentModal.children}\n        </div>\n        <div className=\"flex justify-end space-x-2\">\n          {currentModal.buttons.slice().reverse().map((button, index) => (\n            <Button key={index} style={button.style} onClick={() => {\n                modalService.closeCurrent(button);\n            }}>\n                {button.text}\n            </Button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalHandler;\n","import React, { useEffect, useState } from 'react';\nimport { drawerMenuService, DrawerMenu } from '../services/DrawerMenuService';\n\nconst DrawerMenuHandler: React.FC = () => {\n  const [currentDrawerMenu, setCurrentDrawerMenu] = useState<DrawerMenu | null>(null);\n\n  useEffect(() => {\n    const handleDrawerMenuChange = (drawerMenu: DrawerMenu | null) => {\n      setCurrentDrawerMenu(drawerMenu);\n    };\n\n    drawerMenuService.subscribe(handleDrawerMenuChange);\n\n    return () => {\n      drawerMenuService.unsubscribe(handleDrawerMenuChange);\n    };\n  }, []);\n\n  if (!currentDrawerMenu) return null;\n\n  return (\n    // Background overlay\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 z-40\" onClick={() => drawerMenuService.closeCurrent()}>\n      {/* Drawer menu */}\n      <div\n        className=\"fixed inset-y-0 right-0 flex bg-white w-72 shadow-lg z-50\"\n        onClick={(e) => {\n          e.stopPropagation(); // Prevent click event from closing the drawer\n        }}\n      >\n        <div className=\"w-full h-full p-6\">\n          <div className=\"mb-4\">\n            <h2 className=\"text-3xl font-semibold\">{currentDrawerMenu.title}</h2>\n          </div>\n          <ul className=\"space-y-2\">\n            {currentDrawerMenu.items.map((item, index) => (\n              <li key={index} className=\"hover:border-slate-600 hover-pointer border-2 text-lg text-slate-500 bg-gray-100 rounded px-3 py-3 cursor-pointer\" onClick={() => {\n                  drawerMenuService.closeCurrent(item);\n              }}>\n                {item.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DrawerMenuHandler;\n"],"names":["StateModifier","StyleModifier","WidthModifier","useState","useEffect"],"mappings":";;;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC9B;AACA,EAAE,IAAY,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;AAC1D;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;AACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;;;;;ACzBYA,+BAIX;AAJD,CAAA,UAAY,aAAa,EAAA;AACrB,IAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAQ,CAAA;AACZ,CAAC,EAJWA,qBAAa,KAAbA,qBAAa,GAIxB,EAAA,CAAA,CAAA;;ACJWC,+BAKX;AALD,CAAA,UAAY,aAAa,EAAA;AACrB,IAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;AACT,CAAC,EALWA,qBAAa,KAAbA,qBAAa,GAKxB,EAAA,CAAA,CAAA,CAAA;AAEK,SAAU,QAAQ,CAAC,KAAoB,EAAA;IACzC,QAAO,KAAK;QACR,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAGtB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,OAAO,CAAC;QAGnB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,WAAW,CAAC;QAGvB,KAAKA,qBAAa,CAAC,KAAK;AACpB,YAAA,OAAO,SAAS,CAAC;KAExB;AACL,CAAC;AAEK,SAAU,kBAAkB,CAAC,KAAoB,EAAA;IACnD,QAAO,KAAK;QACR,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAEtB,KAAKA,qBAAa,CAAC,KAAK;AACpB,YAAA,OAAO,SAAS,CAAC;QAErB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,OAAO,CAAC;QAEnB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,WAAW,CAAC;KAC1B;AACL,CAAC;AAEK,SAAU,iBAAiB,CAAC,KAAqB,EAAA;IACnD,QAAO,KAAK;QACR,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAEtB,KAAKA,qBAAa,CAAC,KAAK;AACpB,YAAA,OAAO,SAAS,CAAC;QAErB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,OAAO,CAAC;QAEnB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,WAAW,CAAC;KAC1B;AACL,CAAC;AAEK,SAAU,aAAa,CAAC,KAAoB,EAAA;IAC9C,QAAO,KAAK;QACR,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAGtB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAGtB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAGtB,KAAKA,qBAAa,CAAC,KAAK;AACpB,YAAA,OAAO,QAAQ,CAAC;KAEvB;AACL,CAAC;AAEK,SAAU,aAAa,CAAC,KAAoB,EAAA;IAC9C,QAAO,KAAK;QACR,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,UAAU,CAAC;QAGtB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,OAAO,CAAC;QAGnB,KAAKA,qBAAa,CAAC,OAAO;AACtB,YAAA,OAAO,WAAW,CAAC;QAGvB,KAAKA,qBAAa,CAAC,KAAK;AACpB,YAAA,OAAO,SAAS,CAAC;KAExB;AACL;;ACjGYC,+BAGX;AAHD,CAAA,UAAY,aAAa,EAAA;AACrB,IAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACN,IAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACR,CAAC,EAHWA,qBAAa,KAAbA,qBAAa,GAGxB,EAAA,CAAA,CAAA;;ACWD,IAAY,UAGX,CAAA;AAHD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACN,CAAC,EAHW,UAAU,KAAV,UAAU,GAGrB,EAAA,CAAA,CAAA,CAAA;AAEK,IAAA,MAAM,GAA0B,UAAC,EAAgD,EAAA;AAA9C,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,KAAK,WAAA,EAAE,IAAI,GAAA,EAAA,CAAA,IAAA,EAAE,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA;AAEnF,IAAA,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnC,IAAA,IAAI,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;AACtC,IAAA,IAAM,SAAS,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAE5C,IAAA,IAAM,UAAU,GAAG,KAAK,KAAKA,qBAAa,CAAC,IAAI,GAAG,QAAQ,GAAG,EAAE,CAAC;AAEhE,IAAA,IAAM,UAAU,GAAG,KAAK,KAAKF,qBAAa,CAAC,QAAQ,IAAI,KAAK,KAAKA,qBAAa,CAAC,OAAO,CAAC;AAEvF,IAAA,IAAM,SAAS,GAAG,KAAK,KAAKA,qBAAa,CAAC,OAAO,CAAC;AAElD,IAAA,IAAM,SAAS,GAAG,IAAI,KAAK,UAAU,CAAC,IAAI,GAAG,WAAW,GAAG,WAAW,CAAC;IAEvE,IAAG,UAAU,EAAE;QACb,UAAU,GAAG,EAAE,CAAC;KACjB;IAED,QACE,KAAQ,CAAA,aAAA,CAAA,QAAA,EAAA,EAAA,OAAO,EAAE,YAAA;YACf,IAAG,CAAC,UAAU,EAAE;AACd,gBAAA,IAAG,OAAO,IAAI,IAAI,EAAE;AAClB,oBAAA,OAAO,EAAE,CAAC;iBACX;aACF;AACH,SAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,EAAA,CAAA,MAAA,CAAG,UAAU,GAAG,+BAA+B,GAAG,EAAE,EAAS,QAAA,CAAA,CAAA,MAAA,CAAA,SAAS,EAAI,GAAA,CAAA,CAAA,MAAA,CAAA,SAAS,mCAAyB,UAAU,EAAA,YAAA,CAAA,CAAA,MAAA,CAAa,UAAU,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,UAAU,CAAE,EAC9L,EAAA,SAAS;QACR,KAAG,CAAA,aAAA,CAAA,GAAA,EAAA,EAAA,SAAS,EAAC,yBAAyB,EAAK,CAAA,GAAG,QAAQ,CACjD,EACT;AACJ;;AClCM,IAAA,KAAK,GAAyB,UAAC,EAA4D,EAAA;AAA1D,IAAA,IAAA,WAAW,iBAAA,EAAE,EAAA,GAAA,EAAA,CAAA,IAAa,EAAb,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAM,GAAA,EAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,IAAI,GAAA,EAAA,CAAA,IAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;AAC3F,IAAA,IAAM,UAAU,GAAG,KAAK,KAAKE,qBAAa,CAAC,IAAI,GAAG,QAAQ,GAAG,EAAE,CAAC;AAEhE,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,eAAe,EAAA;AACzB,QAAA,KAAK,IAAI,KAAO,CAAA,aAAA,CAAA,OAAA,EAAA,EAAA,SAAS,EAAC,oCAAoC,EAAA,EAAE,KAAK,CAAS;QAC/E,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,UAAU,EAAA;YACrB,KACI,CAAA,aAAA,CAAA,OAAA,EAAA,EAAA,IAAI,EAAE,IAAI,EACV,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,6BAAA,CAAA,MAAA,CAA8B,UAAU,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,IAAI,GAAG,OAAO,GAAG,EAAE,CAAE,EAC5E,QAAQ,EAAE,QAAQ,EACpB,CAAA;AACD,YAAA,IAAI,KACD,KAAG,CAAA,aAAA,CAAA,GAAA,EAAA,EAAA,SAAS,EAAE,KAAA,CAAA,MAAA,CAAM,IAAI,EAAA,qDAAA,CAAqD,EAAI,CAAA,CACpF,CACC,CACJ,EACR;AACN;;ACnBM,IAAA,OAAO,GAA4B,UAAC,EAAW,EAAA;AAAT,IAAA,IAAA,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA;IAEzC,IAAA,EAAA,GAAoBC,cAAQ,CAAe;AAC7C,QAAA,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACvB,KAAA,CAAC,EAFK,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,QAAQ,QAEpB,CAAC;AAEH,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,yBAAyB,EAAA;QACpC,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,4EAA4E,EAAA;YACvF,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,0DAA0D,EAAA,EAEjE,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,EAAA;AAEV,gBAAA,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC;gBAErC,IAAI,eAAe,GAAG,UAAU,GAAG,aAAa,GAAG,EAAE,CAAC;gBAEtD,QACI,6BAAK,SAAS,EAAE,8BAAuB,eAAe,EAAA,gIAAA,CAAgI,EAAE,OAAO,EAAE,YAAA;AAC7L,wBAAA,QAAQ,CAAC;AACL,4BAAA,QAAQ,EAAE,CAAC;AACd,yBAAA,CAAC,CAAC;AAEH,wBAAA,IAAG,CAAC,CAAC,UAAU,EAAE;4BACb,CAAC,CAAC,UAAU,EAAE,CAAC;yBAClB;qBACJ,EAAA;oBACG,KAAG,CAAA,aAAA,CAAA,GAAA,EAAA,EAAA,SAAS,EAAE,EAAG,CAAA,MAAA,CAAA,UAAU,GAAG,eAAe,GAAG,eAAe,EAAA,wBAAA,CAAA,CAAA,MAAA,CAAyB,CAAC,CAAC,IAAI,CAAE,EAAM,CAAA,CACpG,EACT;AACL,aAAC,CAAC,CAEJ,CACJ,CACJ,EACT;AACL;;ACtCA,IAAA,iBAAA,kBAAA,YAAA;AAMI,IAAA,SAAA,iBAAA,GAAA;QALQ,IAAU,CAAA,UAAA,GAAsB,IAAI,CAAC;QACrC,IAAS,CAAA,SAAA,GAAgD,EAAE,CAAC;KAI5C;;AAGV,IAAA,iBAAA,CAAA,WAAW,GAAzB,YAAA;AACI,QAAA,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;AAC7B,YAAA,iBAAiB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACxD;QACD,OAAO,iBAAiB,CAAC,QAAQ,CAAC;KACrC,CAAA;;IAGM,iBAAS,CAAA,SAAA,CAAA,SAAA,GAAhB,UAAiB,QAAiD,EAAA;AAC9D,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,QAAA,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KACzC,CAAA;;IAGM,iBAAW,CAAA,SAAA,CAAA,WAAA,GAAlB,UAAmB,QAAiD,EAAA;AAChE,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,GAAG,EAAA,EAAI,OAAA,GAAG,KAAK,QAAQ,CAAhB,EAAgB,CAAC,CAAC;KACnE,CAAA;;AAGO,IAAA,iBAAA,CAAA,SAAA,CAAA,MAAM,GAAd,YAAA;QAAA,IAEC,KAAA,GAAA,IAAA,CAAA;AADG,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI,EAAA,OAAA,QAAQ,CAAC,KAAI,CAAC,oBAAoB,EAAE,CAAC,CAArC,EAAqC,CAAC,CAAC;KAC7E,CAAA;;IAGM,iBAAa,CAAA,SAAA,CAAA,aAAA,GAApB,UAAqB,UAAsB,EAAA;AACvC,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB,CAAA;;IAGM,iBAAY,CAAA,SAAA,CAAA,YAAA,GAAnB,UAAoB,SAA2B,EAAA;QAE3C,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;AAC7C,YAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC9B;AAED,QAAA,IAAG,IAAI,CAAC,UAAU,IAAI,SAAS,EAAE;YAC7B,SAAS,CAAC,SAAS,EAAE,CAAC;SACzB;AAED,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB,CAAA;;AAGM,IAAA,iBAAA,CAAA,SAAA,CAAA,oBAAoB,GAA3B,YAAA;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B,CAAA;IACL,OAAC,iBAAA,CAAA;AAAD,CAAC,EAAA,CAAA,CAAA;AAED;AACO,IAAM,iBAAiB,GAAG,iBAAiB,CAAC,WAAW,EAAE;;AC7D1D,IAAA,SAAS,GAA6B,UAAC,EAAiB,EAAA;QAAf,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;AACvD,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,iCAAiC,EAAA;QAE5C,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,qGAAqG,EAAA;YAChH,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,8CAA8C,EAAO,CAAA;AAEpE,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,kBAAkB,EAAA,EAC5B,KAAK,CACJ;AAEN,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,qEAAqE,EAAC,OAAO,EAAE,YAAA;oBAC1F,iBAAiB,CAAC,aAAa,CAAC;AAC5B,wBAAA,KAAK,EAAE,EAAE;wBACT,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,QAAC;4BACrB,IAAI,EAAE,CAAC,CAAC,IAAI;AACZ,4BAAA,SAAS,EAAE,YAAA;6BAEV;yBACJ,EAAC,EAAA,CAAC;AACN,qBAAA,CAAC,CAAC;iBACN,EAAA;AACG,gBAAA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAG,SAAS,EAAC,4CAA4C,EAAA,CAAK,CAC5D,CACJ;QAGN,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,mEAAmE,EAAA;AAC9E,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,iDAAiD,EAAA,EAC3D,KAAK,CACJ;YAEN,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,iCAAiC,EAAA,EAC3C,KAAK,KAAL,IAAA,IAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,QACf,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,SAAS,EAAC,sDAAsD,EAAC,OAAO,EAAE,YAAM,EAAA,OAAA,CAAC,CAAC,OAAO,EAAE,CAAA,EAAA,EAAA,EACxG,CAAC,CAAC,IAAI,CACL,EAHS,EAIlB,CAAC,CACA,CACJ,CACJ,EACR;AACN;;AChDM,IAAA,KAAK,GAA0B,UAAC,EAAkB,EAAA;QAAhB,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;AACnD,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,8BAA8B,EAAA;AACzC,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,kDAAkD,EAAA,EAC5D,KAAK,CACJ;QACN,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,WAAW,EAAA,EACrB,QAAQ,CACP,CACJ,EACT;AACL;;ACTM,IAAA,KAAK,GAA0B,UAAE,EAAwB,EAAA;AAAvB,IAAA,IAAA,KAAK,WAAA,EAAE,OAAO,GAAA,EAAA,CAAA,OAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;AAEzD,IAAA,IAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpC,IAAA,IAAM,SAAS,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC3C,IAAA,IAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IAErC,QACI,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAE,KAAA,CAAA,MAAA,CAAM,OAAO,EAA4B,2BAAA,CAAA,CAAA,MAAA,CAAA,WAAW,EAAS,QAAA,CAAA,CAAA,MAAA,CAAA,SAAS,EAAY,YAAA,CAAA,EAAA;AAC9F,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,uBAAuB,EAAA,EACjC,KAAK,CACJ;QAEN,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,gBAAgB,EAAA,EAC1B,OAAO,CACN,CACJ,EACT;AACL;;AClBM,IAAA,KAAK,GAA0B,UAAC,EAAe,EAAA;QAAb,IAAI,GAAA,EAAA,CAAA,IAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;AAE/C,IAAA,IAAI,SAAS,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAC1C,IAAA,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAE9B,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAE,iDAAkD,CAAA,MAAA,CAAA,SAAS,EAAO,MAAA,CAAA,CAAA,MAAA,CAAA,OAAO,CAAE,EAAA,EACtF,IAAI,CACH,EACT;AACL;;ACFA,IAAA,YAAA,kBAAA,YAAA;AAMI,IAAA,SAAA,YAAA,GAAA;QALQ,IAAM,CAAA,MAAA,GAAY,EAAE,CAAC;QACrB,IAAS,CAAA,SAAA,GAAsC,EAAE,CAAC;KAIlC;;AAGV,IAAA,YAAA,CAAA,WAAW,GAAzB,YAAA;AACE,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;AAC1B,YAAA,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;SAC5C;QACD,OAAO,YAAY,CAAC,QAAQ,CAAC;KAC9B,CAAA;;IAGM,YAAS,CAAA,SAAA,CAAA,SAAA,GAAhB,UAAiB,QAAuC,EAAA;AACtD,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,QAAA,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KAClC,CAAA;;IAGM,YAAW,CAAA,SAAA,CAAA,WAAA,GAAlB,UAAmB,QAAuC,EAAA;AACxD,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,GAAG,EAAA,EAAI,OAAA,GAAG,KAAK,QAAQ,CAAhB,EAAgB,CAAC,CAAC;KACjE,CAAA;;AAGO,IAAA,YAAA,CAAA,SAAA,CAAA,MAAM,GAAd,YAAA;AACE,QAAA,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAA,EAAI,OAAA,QAAQ,CAAC,YAAY,CAAC,CAAtB,EAAsB,CAAC,CAAC;KAC5D,CAAA;;IAGM,YAAQ,CAAA,SAAA,CAAA,QAAA,GAAf,UAAgB,KAAY,EAAA;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;KACf,CAAA;;IAGM,YAAY,CAAA,SAAA,CAAA,YAAA,GAAnB,UAAoB,WAAyB,EAAA;QAC3C,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAEvC,QAAA,IAAG,YAAY,IAAI,WAAW,EAAE;YAC9B,WAAW,CAAC,OAAO,EAAE,CAAC;SACvB;AAED,QAAA,IAAI,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE;YACzC,YAAY,CAAC,QAAQ,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;KACf,CAAA;;AAGM,IAAA,YAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KAC5E,CAAA;IACH,OAAC,YAAA,CAAA;AAAD,CAAC,EAAA,CAAA,CAAA;AAED;IACa,YAAY,GAAG,YAAY,CAAC,WAAW;;ACzEtD,IAAM,YAAY,GAAa,YAAA;IACvB,IAAA,EAAA,GAAkCA,cAAQ,CAAe,IAAI,CAAC,EAA7D,YAAY,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,eAAe,GAAA,EAAA,CAAA,CAAA,CAAgC,CAAC;AAErE,IAAAC,eAAS,CAAC,YAAA;QACR,IAAM,iBAAiB,GAAG,UAAC,KAAmB,EAAA;YAC5C,eAAe,CAAC,KAAK,CAAC,CAAC;AACzB,SAAC,CAAC;AAEF,QAAA,YAAY,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE1C,OAAO,YAAA;AACL,YAAA,YAAY,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;AAC9C,SAAC,CAAC;KACH,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,IAAI,CAAC,YAAY;AAAE,QAAA,OAAO,IAAI,CAAC;AAE/B,IAAA,QACE,KACE,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,4EAA4E,EACtF,OAAO,EAAE,YAAA;YACP,YAAY,CAAC,YAAY,EAAE,CAAC;SAC7B,EAAA;AAED,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACE,SAAS,EAAC,uDAAuD,EACjE,OAAO,EAAE,UAAC,CAAC,EAAA;AACT,gBAAA,CAAC,CAAC,eAAe,EAAE,CAAC;aACrB,EAAA;YAED,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,MAAM,EAAA;gBACnB,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,SAAS,EAAC,wBAAwB,EAAA,EAAE,YAAY,CAAC,KAAK,CAAM,CAC5D;AACN,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,MAAM,IAClB,YAAY,CAAC,QAAQ,CAClB;AACN,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,4BAA4B,EACxC,EAAA,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK,IAAK,QAC7D,KAAC,CAAA,aAAA,CAAA,MAAM,IAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,YAAA;AAC9C,oBAAA,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACtC,iBAAC,EACI,EAAA,MAAM,CAAC,IAAI,CACP,EALoD,EAM9D,CAAC,CACE,CACF,CACF,EACN;AACJ;;ACjDA,IAAM,iBAAiB,GAAa,YAAA;IAC5B,IAAA,EAAA,GAA4CD,cAAQ,CAAoB,IAAI,CAAC,EAA5E,iBAAiB,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,oBAAoB,GAAA,EAAA,CAAA,CAAA,CAAqC,CAAC;AAEpF,IAAAC,eAAS,CAAC,YAAA;QACR,IAAM,sBAAsB,GAAG,UAAC,UAA6B,EAAA;YAC3D,oBAAoB,CAAC,UAAU,CAAC,CAAC;AACnC,SAAC,CAAC;AAEF,QAAA,iBAAiB,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAEpD,OAAO,YAAA;AACL,YAAA,iBAAiB,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;AACxD,SAAC,CAAC;KACH,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,IAAI,CAAC,iBAAiB;AAAE,QAAA,OAAO,IAAI,CAAC;IAEpC;;AAEE,IAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,2CAA2C,EAAC,OAAO,EAAE,YAAM,EAAA,OAAA,iBAAiB,CAAC,YAAY,EAAE,GAAA,EAAA;AAExG,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACE,SAAS,EAAC,2DAA2D,EACrE,OAAO,EAAE,UAAC,CAAC,EAAA;AACT,gBAAA,CAAC,CAAC,eAAe,EAAE,CAAC;aACrB,EAAA;YAED,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,mBAAmB,EAAA;gBAChC,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,MAAM,EAAA;oBACnB,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,SAAS,EAAC,wBAAwB,EAAA,EAAE,iBAAiB,CAAC,KAAK,CAAM,CACjE;gBACN,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,SAAS,EAAC,WAAW,EACtB,EAAA,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,EAAA,EAAK,QAC5C,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,mHAAmH,EAAC,OAAO,EAAE,YAAA;AACnJ,wBAAA,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACzC,qBAAC,EACE,EAAA,IAAI,CAAC,IAAI,CACP,EACN,EAAA,CAAC,CACC,CACD,CACF,CACF,EACN;AACJ;;;;;;;;;;;;;","x_google_ignoreList":[0]}